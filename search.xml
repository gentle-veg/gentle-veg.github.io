<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小程序简介</title>
      <link href="/2019/04/22/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/04/22/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h4 id="小程序"><a href="#小程序" class="headerlink" title="小程序:"></a>小程序:</h4><ul><li>支付宝小程序(自己开发)</li><li>微信小程序(提供了外部接口)</li></ul><h4 id="小程序的特点"><a href="#小程序的特点" class="headerlink" title="小程序的特点"></a>小程序的特点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">适合使用频率低的应用</span><br><span class="line">适合简单的用完即走的应用</span><br><span class="line">适合性能要求不高的应用</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dom操作--操作属性,方法</title>
      <link href="/2019/03/24/dom%E6%93%8D%E4%BD%9C--%E6%93%8D%E4%BD%9C%E5%B1%9E%E6%80%A7,%E6%96%B9%E6%B3%95/"/>
      <url>/2019/03/24/dom%E6%93%8D%E4%BD%9C--%E6%93%8D%E4%BD%9C%E5%B1%9E%E6%80%A7,%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="HTML-DOM-是："><a href="#HTML-DOM-是：" class="headerlink" title="HTML DOM 是："></a>HTML DOM 是：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HTML 的标准对象模型</span><br><span class="line">HTML 的标准编程接口( HTML 元素被定义为对象，而编程接口则是对象方法和对象属性)</span><br><span class="line">W3C 标准</span><br></pre></td></tr></table></figure><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><ul><li>url: html文档位置</li><li>title: 文档标题</li><li>images: html中图片</li><li>form表单: html表单</li><li>body标签: html中的标签</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//文档标题,可以修改标题</span><br><span class="line">document.write=&quot;hello&quot;; </span><br><span class="line">//获取所有表单</span><br><span class="line">console.log(document.forms);</span><br><span class="line">//获取所有图片</span><br><span class="line">console.log(document.images);</span><br><span class="line">//获取body</span><br><span class="line">console.log(document.body);</span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1.获取方法</strong></p><ul><li><p>1.通过id获取(只获取一个元素)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&quot;id名&quot;)</span><br></pre></td></tr></table></figure></li><li><p>2.通过标签名获取(结果是数组)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementsByTagName(&quot;标签&quot;)</span><br></pre></td></tr></table></figure></li><li><p>3.通过类名获取(结果是数组)–ie9及以上识别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementsByClassName(&quot;类名&quot;)</span><br></pre></td></tr></table></figure></li><li><p>4.通过name属性获取(结果是数组)–常用于表单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementsByName()</span><br></pre></td></tr></table></figure></li><li><p>5.通过css选择器获取(只获取一个元素)–ie8及以上识别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.querySelect(&quot;css选择器&quot;)</span><br></pre></td></tr></table></figure></li><li><p>6.通过css选择器获取(结果是一个数组)–ie8及以上识别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.querySelectAll(&quot;css选择器&quot;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="修改元素内容"><a href="#修改元素内容" class="headerlink" title="修改元素内容"></a>修改元素内容</h4><ul><li><ol><li>innerHTML–1识别标签,2可以访问,可以修改<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.innerHTML=&apos;修改后的结果&apos;</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="2"><li>innerText–输出纯文本<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.innerText=&apos;修改后的结果&apos;</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="3"><li>textContent–输出纯文本,保留文本格式<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.textContent=&apos;修改后的结果&apos;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h3 id="修改样式"><a href="#修改样式" class="headerlink" title="修改样式"></a>修改样式</h3><h4 id="1-通过修改类名—ie9以下不能用"><a href="#1-通过修改类名—ie9以下不能用" class="headerlink" title="1.通过修改类名—ie9以下不能用"></a>1.通过修改类名—ie9以下不能用</h4><ul><li><p>1.通过className获取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">元素.className=&apos;类名 //会覆盖原有的类名</span><br><span class="line">元素.className+=&apos;类名&apos; //类不会覆盖,只会叠加</span><br></pre></td></tr></table></figure></li><li><p>2.通过classList属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">元素.classList.add(&apos;类名&apos;)//添加类名,不覆盖原有类名</span><br><span class="line">元素.classList.remove(&apos;类名&apos;)//移除类名</span><br><span class="line">元素.classList.contain(&apos;类名&apos;)//判断类名是否存在,有true,没有false</span><br><span class="line">元素.classList.toggle(&apos;类名&apos;)//添加或删除类名,有删除,没有添加</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-通过行内style样式"><a href="#2-通过行内style样式" class="headerlink" title="2.通过行内style样式"></a>2.通过行内style样式</h4><p>元素.style.样式名=’样式值’</p><h4 id="3-通过操作属性"><a href="#3-通过操作属性" class="headerlink" title="3.通过操作属性"></a>3.通过操作属性</h4><ul><li><p>1.原生属性–本身具有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.属性名=&apos;属性值&apos;</span><br></pre></td></tr></table></figure></li><li><p>2.自定义属性–自己定义的(原生的属性也可以使用)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">元素.setAttribute(&apos;属性名&apos;,&apos;属性值&apos;)//设置属性</span><br><span class="line">元素.getAttribute(&apos;属性名&apos;)//设置属性</span><br><span class="line">元素.removeAttribute(&apos;属性名&apos;)//移除属性</span><br><span class="line">元素.hasAttribute(&apos;属性名&apos;)//判断属性是否存在(boolean类型,用于条件判断)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> dom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是dom</title>
      <link href="/2019/03/24/dom%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/03/24/dom%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<p><strong>js以事件驱动为核心的语言</strong><br><strong>dom:文档对象模型</strong></p><p><strong>dom操作三要素</strong></p><ul><li>1.事件源</li><li>2.事件 </li><li>3.事件驱动程序</li></ul><h4 id="dom操作三部曲"><a href="#dom操作三部曲" class="headerlink" title="dom操作三部曲"></a>dom操作三部曲</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">获取事件源</span><br><span class="line">绑定事件</span><br><span class="line">书写事件驱动程序</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> dom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue2.0基础(钩子函数)</title>
      <link href="/2019/03/20/vue2-0%E5%9F%BA%E7%A1%80-%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0/"/>
      <url>/2019/03/20/vue2-0%E5%9F%BA%E7%A1%80-%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h5 id="vue指令"><a href="#vue指令" class="headerlink" title="vue指令"></a>vue指令</h5><p><strong>v-if,v-else,v-show</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue2.0基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue,react,angular对比</title>
      <link href="/2019/03/20/vue-react-angular%E5%AF%B9%E6%AF%94/"/>
      <url>/2019/03/20/vue-react-angular%E5%AF%B9%E6%AF%94/</url>
      
        <content type="html"><![CDATA[<p>如何做技术选型<br>1.开源项目社区<br>2.开源框架做对比</p><p>vue.js更容易上手,学习曲线平稳<br>angular采用了后端的思想</p><h4 id="vue-js思想"><a href="#vue-js思想" class="headerlink" title="vue.js思想"></a>vue.js思想</h4><p>vue,react,angular都是MVVM<br>数据驱动+组件化的开发思想<br>vue,react,angular的联系</p><p>vue.js和angular的指令<br>react.js的组件化思想</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ajax的用法</title>
      <link href="/2019/03/20/ajax%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/2019/03/20/ajax%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>dom</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据传递 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-devtools</title>
      <link href="/2019/03/19/vue-devtools/"/>
      <url>/2019/03/19/vue-devtools/</url>
      
        <content type="html"><![CDATA[<h4 id="1vue-devtools的安装"><a href="#1vue-devtools的安装" class="headerlink" title="1vue-devtools的安装"></a>1vue-devtools的安装</h4><ul><li><p>1.在github下载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone  https://github.com/vuejs/vue-devtools</span><br></pre></td></tr></table></figure></li><li><p>2.用你的npm中进入该文件夹下</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i  //添加依赖</span><br><span class="line">npm run build   //没有执行，文件夹shells&gt;chrome&gt;src文件夹</span><br></pre></td></tr></table></figure><ul><li>3修改shells&gt;chrome&gt;mainifest.json</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;background&quot;: &#123;</span><br><span class="line">       &quot;scripts&quot;: [</span><br><span class="line">         &quot;build/background.js&quot;</span><br><span class="line">       ],</span><br><span class="line">       &quot;persistent&quot;: true</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><ul><li><p>4.谷歌浏览器的扩展程序功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">加载已解压的扩展程序,选择将文件夹中shells&gt;chorme,</span><br><span class="line">勾选开发者模式，</span><br></pre></td></tr></table></figure></li><li><p>优缺点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">缺点: 第二步执行起来很慢</span><br><span class="line">优点: 有利于组件化开发</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vue工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客的搭建</title>
      <link href="/2019/03/19/hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/03/19/hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h4 id="1-windows下安装git和node-js"><a href="#1-windows下安装git和node-js" class="headerlink" title="1.windows下安装git和node.js"></a>1.windows下安装git和node.js</h4><ul><li><p>git官网下载,安装.</p></li><li><p>node.js官网下载,安装.</p></li></ul><h4 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2.安装hexo"></a>2.安装hexo</h4><ul><li><p>1.安装hexo依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure></li><li><p>2.初始化hexo，建一个文件夹MyBloc,然后进入文件夹，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></li><li><p>3.生成静态文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure></li><li><p>4.启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s(hexo server)|hexo s -p 5000(端口号,4000被占用时)</span><br></pre></td></tr></table></figure></li><li><p>5.访问网址为： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p></li></ul><h4 id="3-创建GitHub博客仓库"><a href="#3-创建GitHub博客仓库" class="headerlink" title="3.创建GitHub博客仓库"></a>3.创建GitHub博客仓库</h4><ul><li>1.首先新建一个仓库 new repository</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意: username.github.io，username替换为你自己账号的名字</span><br></pre></td></tr></table></figure><ul><li><p>2.填写信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username.github.io</span><br><span class="line">public</span><br><span class="line">Initialize this repository with a README选择</span><br></pre></td></tr></table></figure></li><li><p>3.查看是否存在秘钥(git bash here)</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ls</span><br><span class="line">id_rsa      id_rsa.pub  known_hosts</span><br></pre></td></tr></table></figure><ul><li><p>4.如果没有秘钥，换成你自己的邮箱地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your email&quot;</span><br></pre></td></tr></table></figure></li><li><p>5拷贝id_rsa.pub文件里的内容，添加到你的GitHub上(如何没有秘钥,是无法通过网络访问的)<br><strong>ssh and GPG keys</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title(名字任意)</span><br><span class="line">id_rsa.pub(拷贝里面的内容)</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-hexo博客和GitHub仓库相关联，并部署"><a href="#4-hexo博客和GitHub仓库相关联，并部署" class="headerlink" title="4.hexo博客和GitHub仓库相关联，并部署"></a>4.hexo博客和GitHub仓库相关联，并部署</h4><ul><li><p>1.根目录下的_config.yml文件，然后添加入下内容，将username改为你自己的账号名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">   type: git</span><br><span class="line">   repo: git@github.com:username/username.github.io</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure></li><li><p>2.安装自动发布工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git  --save //会自动发布到本地服务器只需要刷新即可</span><br></pre></td></tr></table></figure></li><li><p>3.然后部署到GitHub</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //清理</span><br><span class="line">hexo generate  //生成静态文件</span><br><span class="line">hexo deploy  //部署网站</span><br></pre></td></tr></table></figure></li></ul><h4 id="5-hexo常用的一些命令"><a href="#5-hexo常用的一些命令" class="headerlink" title="5.hexo常用的一些命令"></a>5.hexo常用的一些命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //清除</span><br><span class="line">hexo g //上传到本地</span><br><span class="line">hexo d //上传到github</span><br><span class="line">hexo s //运行本地服务器</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
